Word,Count
*,375
,157
the,127
in,119
this,113
=,98
+,93
change,91
choose,86
To,85
and,85
to,79
template,78
if,62
new,57
{,57
of,57
be,54
},54
TODO,53
private,52
|,49
Tools,46
Templates,46
open,42
for,42
Project,39
Headers,39
\file,\,39
\header,\,39
editor,39
license,39
Properties,39
@author,39
License,39
not,37
NOT,35
from,32
\,\,32
at,30
tomas,29
@param,28
on,27
static,26
public,26
download,25
it,25
is,24
that,24
int,23
find,23
dot,23
coudnt,23
IN,23
final,21
application,21
or,20
size,19
here,19
sure,18
i,18
check,18
no,17
//,17
all,17
might,17
by,17
OF,16
downlaod,16
database,16
remove,16
SimpleStringProperty,16
FOR,16
String,16
a,15
has,15
file,15
user,15
/,15
as,14
create,14
TABLE,14
set,14
into,13
long,13
->,13
preferences,13
\"\\,13
with,13
speed,12
state,12
THIS,12
todo,12
start,12
threads,12
active,12
get,11
else,11
have,11
used,11
data,11
==,11
optimize,11
db,11
downloads,11
notification,10
@return,10
IS,10
maybe,10
Kofola,10
TO,10
scheduler,10
view,10
VARCHAR(255),10
use,10
will,10
can,9
only,9
its,9
completion,9
downloaded,9
FROM,9
already,9
:,9
SimpleLongProperty,9
-,9
generated,9
gonna,9
url,8
since,8
});,8
boolean,8
seconds,8
text,8
name,8
runtime,8
BYTES/,8
REPRESENTED,8
STRING,8
AT,8
//stores,8
up,8
>,8
are,8
\"\-"\\,8
SimpleDoubleProperty,8
ON,8
case,7
bytes,7
!=,7
they,7
multipleSelection.removeAll(multipleSelection);,7
&&,7
first,7
body,7
test,7
do,7
method,7
THE,7
thread,7
care,7
\methods,\,7
return,7
created,6
SimpleIntegerProperty,6
SET,6
IF,6
like,6
changed,6
well,6
sa,6
\"\"\)\,6
calculated,6
ex);,6
VALUE,6
\null,\,6
needed,6
1),6
1,6
password,6
totalSeconds,6
value,6
login,6
idea,6
table,6
ROWS,6
try,6
paused,6
show,6
minutes,6
based,6
stop,6
0),6
there,6
delete,6
default,6
dont,5
go,5
same,5
INT,5
some,5
SELECTED,5
\System.out.println("\PROGRESS\,5
fix,5
0.5,5
make,5
other,5
progress.set(((double)((long)newVal/getSize()))*100);,5
getItems().remove(row.getItem());,5
CREATE,5
resume,5
one,5
necessery,5
when,5
number,5
na,5
stiahlo,5
add,5
zaklade,5
something,5
null),5
values,5
hours,5
\:"\+((double)((long)newVal/getSize()))*100);\,5
CAHNGE,5
downloading,5
kolko,5
\1,\,5
SURE,5
was,5
cant,5
profile,5
way,5
60,5
catch,5
executed,5
just,5
valid,5
ex),5
sekundy,5
id,5
before,5
getItems().removeAll(multipleSelection);//TODO,5
inactive,5
bytov,5
been,5
error();,5
old,5
DOWNLOAD,5
flags,5
upon,5
THAT,5
every,5
etc,5
za,5
after,5
port,4
bud,4
field,4
partial,4
multiple,4
notify,4
we,4
compute,4
im,4
\numOfConnections.get(),\,4
getId(),4
running,4
..,4
//TODO,4
opt,4
update,4
need,4
thru,4
set//file,4
\DownloadThread("\dt-"\\,4
returns,4
FILENAME_PARTIAL,4
1024),4
take,4
what,4
TASKS,4
down,4
getDirectory(),4
Shows,4
filter,4
volatile,4
TASK,4
60;,4
supported,4
hold,4
nonstop,4
\"\/"\\,4
doesnt,4
DATA,4
STATE,4
probably,4
kb/s,4
index,4
later.,4
binding,4
LONG,4
downloadThreadList.add(new,4
WILL,4
AND,4
(i,4
instance,4
setSizeProperty(new,4
progress.bind(downloaded.divide(size).divide(100));,4
I,4
time,4
ex.printStackTrace();,4
progress,4
changes,4
\getSource(),\,4
shoud,4
3;,4
super,4
/TESTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT,4
DOWNLAOD,4
last,4
vypocitaj,4
possible,4
THREAD,4
must,4
\NULL,"\\,4
me//,4
%,4
cause,4
\getId(),\,4
source;,4
ineffective,4
WITH,4
USE,4
BE,4
added,4
execute,4
getNumberOfConnections()));,4
LOAD,4
DB,3
.,3
SimpleDoubleProperty(0.5);,3
while,3
segmented,3
directory;,3
INTO,3
part,3
parallel,3
close,3
character,3
name;//can,3
WAY,3
\NULL,name\,3
\getStatement().execute("\CREATE\,3
does,3
\NULL,completedOn\,3
TESTING,3
\"\Completed"\,\,3
SCHEDULED,3
stored,3
numOfConnections,3
keep,3
ARE,3
A,3
\TextFields.bindAutoCompletion(this,\,3
downloads(id,3
SimpleLongProperty(size);,3
getNumberOfConnections(),3
WORKS,3
overriden,3
where,3
you,3
display,3
tasks,3
connection,3
size;//STORED,3
this.size,3
popup,3
SimpleDoubleProperty(0);,3
items,3
SimpleLongProperty(id);,3
see,3
ADD,3
HERE,3
capslock,3
downloadSpeed,3
now,3
instead,3
info,3
this.id,3
range,3
header,3
ONLY,3
call,3
downloadUnitCache,3
STATE_STRINGS,3
\SimpleStringProperty("\Not\,3
dir,3
work,3
\VARCHAR(255),downloadDir\,3
pre,3
id;,3
iteration,3
\FileUtils.exportDataFromTable(tableView,\,3
how,3
PAUSED,3
SimpleIntegerProperty(CONNECTIONS_DEF);,3
getSizeOf(source),3
(notification,3
folder,3
(size,3
names,3
then,3
itself,3
load,3
(long),3
mess,3
\0,\,3
\NULL,size\,3
o,3
DownloadTask,3
displayed,3
vsetky,3
||,3
\1),\,3
posun,3
later,3
exception,3
any,3
IMPORTANT,3
added;//calculates,3
pane,3
current,3
nevim,3
extra,3
USER,3
them,3
\"\Paused"\,\,3
form,3
ones,3
wont,3
IMPLEMENTATION,3
BUD,3
\Logger.getLogger(Downloader.class.getName()).log(Level.SEVERE,\,3
'/',3
EXECUTION,3
possibleSuggestions.addAll(Arrays.asList(suggestions));,3
CASE,3
called,3
actually,3
again,3
\{"\Failed"\,\,3
UserProfile,3
DU,3
getName(),3
different,3
offset,3
units,3
//notify,3
mode,3
end,3
\"\Downloading"\,\,3
cases,3
;//not,3
\"\state\,3
PREFERENCES,3
execution,3
email,3
\NULL,added\,3
dt,3
SimpleIntegerProperty(STATE_DOWNLOADING);,3
run,3
downloaded;//STORED,3
regex,3
woud,3
completedOn;////calculates,3
\"\source\,3
eta;//based,3
OpenChannel_Dynamic_Downloader.getTray(),3
STATE_FAILED,2
getDownloaded()),2
setCompletedOnProperty(new,2
uses,2
\:"\\,2
THREADS,2
downlaoding,2
tables,2
right,2
recreate,2
(totalSeconds,2
ignore,2
3600),2
STATE_COMPLETED,2
insert,2
SimpleStringProperty(LocalDateTime.now().format(DateTimeFormatter.ISO_LOCAL_DATE_TIME)));,2
Singleton,2
2);,2
\"\Cancelled"\};\,2
validate,2
SimpleStringProperty(fileName));,2
either,2
space,2
downloadsDir=new,2
imgUrl,2
CASES,2
dtCache.add(dt);,2
3600;,2
possibleSuggestions,2
THEM,2
downloadSpeed.set(((getDownloaded(),2
https,2
\time,\,2
second,2
about,2
BEIGN,2
existing,2
fxml,2
implement,2
HAVE,2
SQLException,2
FORCE,2
title,2
String[],2
listener,2
CREATING,2
CAN,2
THEN,2
saved,2
CONTRUCTOR,2
\auto_increment,"\\,2
average,2
1000,2
BUT,2
STREAM,2
https://community.oracle.com/thread/3677813?start=0&tstart=0,2
FxmlDownloadsViewController.addItemToOCTable(dt);,2
TIME,2
DO,2
executor.submit(new,2
setDownloadSpeedProperty(new,2
);,2
VARCHAR(1000),2
setAddedProperty(new,2
WHILE,2
\"\CREATE\,2
SimpleLongProperty(id));,2
position,2
1;//means,2
Currently,2
cached,2
notifierType,2
@throws,2
series,2
UNITS,2
stage,2
pause,2
loaded,2
BEFORE,2
\du.getNumberOfConnections(),\,2
done,2
window,2
compiler,2
\NULL,connections\,2
SimpleLongProperty(0));,2
pointer,2
setDirectory(directory);,2
switch,2
applicaiton,2
deletion,2
put,2
OUTSIDE,2
HashSet<>(Arrays.asList(suggestions));,2
SimpleStringProperty(source.toString()));,2
((hours,2
FXAT,2
executing,2
still,2
writing,2
MULTIPLE,2
getConnection().commit();,2
bigint,2
ELSE,2
Queued,2
oldVal.longValue(),2
\"\s"\\,2
TrayIcon.MessageType.INFO);,2
s,2
true;,2
EVEN,2
SMOOTHING_FACTOR),2
logProfile,2
BACKGROUND,2
vo,2
RESUME,2
LOADING,2
PARALLEL,2
-1;,2
STORED,2
fkn,2
NORMAL,2
too,2
\getSize(),\,2
((seconds,2
SOMETHING,2
(IOException,2
FILE,2
Just,2
du),2
execture,2
sheduled,2
STATE_CANCELLED,2
List,2
som,2
setNameProperty(new,2
setSourceProperty(new,2
KILL,2
\offsets()"\);\,2
stmt,2
fuckn,2
constant,2
debug,2
(PreparedStatement,2
Might,2
correct,2
ready,2
scheduled,2
ak,2
null,2
UNDER,2
specified,2
beign,2
block,2
DT,2
shodu,2
ill,2
logged,2
getItems().removeAll(multipleSelection);,2
\SimpleStringProperty("\test"\));\,2
4;,2
\Logger.getLogger(DownloadTask.class.getName()).log(Level.SEVERE,\,2
partStartOffset,2
RUNNING,2
SimpleLongProperty(size));,2
num,2
HttpURLConnection,2
logic,2
etaProperty().set(,2
Desktop.getDesktop().browse(null);,2
CORRECT,2
statistics,2
FilteredList,2
bool,2
refresh,2
ACTUAL,2
STATE_SCHEDULED,2
activate,2
aj,2
setEtaProperty(new,2
clipboard,2
START,2
oldDownSize),2
setIdProperty(new,2
previous,2
Using,2
screen,2
ts=text.toCharArray().length;,2
AFTER,2
TEST,2
USED,2
SimpleDoubleProperty(0.0));,2
eh,2
setNumberOfConnections(numberOfConnections);,2
ui,2
contained,2
each,2
CONNECTIONS_DEF,2
\DownloadTask(du.getName(),\,2
parameters,2
\notification,\,2
eula,2
bit,2
DBUtil,2
removed,2
Main,2
mb,2
best,2
downloadDir;//not,2
Color,2
this.source,2
setDownloadedProperty(new,2
conn,2
your,2
If,2
button,2
averageSpeed;//in,2
FXCollections.observableArrayList());,2
takes,2
FIRST,2
STATE_PAUSED,2
dt),2
comparator,2
newVal),2
2;,2
fucked,2
DOWNLOADS,2
prolly,2
byte,2
KEDZE,2
resolutions,2
(String,2
MOST,2
Platform.runLater((),2
US,2
\NULL);"\\,2
lats,2
\"\sa"\);\,2
store,2
URL,2
\completed"\));\,2
(1,2
deactivate,2
\partStart,\,2
give,2
written,2
e.printStackTrace();,2
within,2
downlaoded,2
websites,2
directly,2
\SimpleStringProperty(Info.OC_DOWNLOADS_DIR+getUsername()+"\\\"\);\,2
Application,2
SimpleLongProperty(getSizeOf(source)));,2
Wrap,2
\DOINGTHINGS,\,2
DOES,2
STOPS,2
initialization,2
so,2
under,2
SMOOTHING_FACTOR,2
KIND,2
cell,2
JUST,2
((getSize(),2
SortedList,2
(du.getState(),2
\oldVal,\,2
dispose,2
\"\;\,2
IT,2
really,2
OFF,2
kind,2
Thread(dt).start();,2
(index,2
OPTIMIZE,2
STATE_DOWNLOADING,2
desktop,2
OPTIMIZED,2
possibleSuggestions);,2
Text,2
\"\m\,2
long[numberOfConnections];,2
boolean[numberOfConnections];,2
threadFinishFlags,2
AS,2
included,2
closed,2
//todo,2
Download());,2
tray,2
pref,2
ANY,2
mainly,2
averageSpeed;,2
going,2
averageSpeed,2
toggles,2
executor,2
//compiler,2
conn.setInstanceFollowRedirects(true);,2
were,2
milisec,2
unit,2
resumed,2
((minutes,2
frame,2
0;,2
yet,2
\"\h\,2
main,2
proxy,2
notifications,2
constructor,2
Loads,2
task,2
continue,2
below,1
\paused,\,1
\getConnection().prepareStatement("\select\,1
menu,1
Flag,1
dt.getId()).count(),1
//stack,1
IWLL,1
confirm,1
this.getColumns().add(downloadedColumn);,1
operaciami,1
app,1
wanna,1
3,1
SU,1
FxmlDownloadsViewController.removeItemFromOCTable(dt);,1
\EXISTENT,\,1
\NULL,downloaded\,1
tableData,1
users,1
download/if,1
DIFFERENT,1
custom,1
zapisuj,1
THRU,1
log,1
downloads.stream().filter((du),1
(Files.size(Paths.get(filePath))),1
\CHANGES"\,2000);//todo\,1
path,1
BREAK,1
screen/stage,1
DownloadTask.SizeNotDeterminedException,1
IMPORTANT!,1
versions,1
repair,1
?..,1
code,1
WROOOOOOOONG,1
them.PROBLEM,1
stmt.executeQuery()),1
existance,1
EXIT,1
buffer.,1
stats,1
CANT,1
DOWNLOADS!!!!!!!!!!!!,1
redirections,1
process//or,1
ports,1
filed,1
URL(url);,1
\conn.setRequestProperty("\User-Agent"\,\,1
quick,1
portion,1
fxap,1
jsut,1
situations,1
0).forEach((DownloadTask,1
may,1
dSizeMap,1
pieces,1
generate,1
SHECULER.,1
discard,1
\getConnection().prepareStatement("\INSERT\,1
buttons,1
settings,1
addItemToOCTable,1
getDownloaded();//prolly,1
parameter,1
TrayIcon.MessageType.ERROR);,1
panel,1
seocnds/minutes,1
ocmmons,1
VIEW,1
controlled,1
scroll,1
endByte),1
\INFORMATION,\,1
getPossibleSuggestions());,1
walk,1
\file."\,\,1
matches,1
MAYBE,1
EXTENDED,1
BYT,1
transition,1
du,1
speedSeriesMinutes,1
osem,1
\partNum,\,1
Parralel,1
\stmt.setString(3,\,1
compare,1
clears,1
off,1
opens,1
downloader.handleRedirect,1
poses,1
du.getName(),1
he,1
/help,1
void,1
iterations,1
readed,1
occured,1
Downloader.createFinalHttpURLConnection(url.toString());,1
\System.out.println("\ITEM:"\+s+"\\n"\);\,1
null);,1
\same"\);\,1
SimpleStringProperty(fileName);,1
rs,1
\"\shizzle"\});//TODO\,1
sLength,1
logProfile.login();,1
\WHILE"\);\,1
CONDITIO,1
TableView,1
\URL(du.getSource()),\,1
ONES,1
SimpleStringProperty(source.toString());,1
\done,cancelled,failed,\,1
calls,1
try{,1
ACCOUNT,1
secured,1
which,1
\Runtime.getRuntime().exec("\explorer.exe\,1
downloadUnit,1
timeapplication,1
imgLoader;,1
adn,1
condition,1
problem,1
lambda,1
out,1
\FxmlMainViewController.showPaneNotification("\HELLO\,1
iterable,1
reversed,1
este,1
authentificator,1
file/or,1
(isDiskSpace(getDownloaded())),1
\System.out.println("\Table\,1
\stmt.setString(2,\,1
z,1
MAKE,1
Create,1
oldDownSize,1
co,1
creative,1
depends,1
list,1
BY,1
review,1
STOP,1
\"\Logged\,1
PER,1
IOException,1
pref=Preferences.userRoot().node,1
INSTANCE,1
disk,1
\originalTable,\,1
anything,1
using,1
STATE_DOWNLOADING),1
OCTableView,1
objects//active/paused,1
2,1
latest,1
\downloadedProperty().addListener((val,\,1
event),1
0010,1
away,1
KEY,1
ocTableView.setItems();,1
\fileName,\,1
LOADUJU,1
\empty,\,1
(rs.next()),1
downloads.stream().forEach((DownloadUnit,1
efectively,1
taken,1
HTTP,1
storeItself,1
1k,1
root,1
loginBtn.setOnMouseClicked((MouseEvent,1
windows/,1
IMPORTANT!!!!!!!!!!!!IMPORTANT!!!!!!!!!!!!IMPORTANT!!!!!!!!!!!,1
\FILE"\);\,1
resourceUrl,1
\db,\,1
enum,1
\files,//MOVED\,1
STATE/APPLICATION,1
\bytes"\);\,1
error,1
selected,1
accepted,1
endByte;,1
datasets,1
Label,1
//TEST,1
tray/,1
false,1
(ResultSet,1
du.getDirectory(),1
hej!;D,1
MAJU,1
\"\"\;\,1
icon,1
message,1
CODE!!!,1
littlebit,1
wants,1
btw,1
save,1
esle,1
resource//might,1
Thread((),1
prepared,1
dt.getId());,1
PARTY,1
HashSet<>(possibleSuggestions);,1
newVal,1
downloads.add(du);,1
invalid,1
takze,1
MOTHERFUCKN,1
enabled,1
dataLocSpaceLock[FileUtils.getNumOfDisk()];,1
email);,1
shutdown,1
mal,1
removeItemsOnEvent(List<DownloadTask>,1
ok,1
WTF,1
idea..,1
overload,1
top,1
\(name,\,1
CREATED,1
anyway,1
hide,1
master,1
him,1
deleted,1
program,1
authentificated,1
recommended,1
globalkey,1
SPEED,1
\sure,\,1
loadSuggestions();,1
Graphic,1
CUSTOM,1
Info,1
intensive,1
NTO,1
(((long),1
convert,1
everything,1
wait.or,1
HashMap<>();//,1
\icon.displayMessage("\OpenChannel"\,\,1
apply,1
INCOGNITO,1
performance,1
small,1
Opens,1
\taskId,\,1
fight,1
seek,1
MOVED,1
initialize,1
suggested,1
widths,1
MAYBE/.,1
je,1
byt,1
sucessfully,1
citaj,1
initialized,1
dedicated,1
bar,1
specific,1
byte[PLAYBACK_BUFFER_SIZE];,1
redownlaoded,1
LOGGIN,1
Miliseconds,1
{//disallow,1
match,1
(Exception,1
gain//fixed,1
without,1
allow,1
LOADED,1
over,1
dtcache,1
clear,1
PRINT,1
aktualne,1
close/tray,1
daily,1
autoexec,1
implemnt,1
\du.getDirectory(),\,1
KED,1
/SWITCH,1
\then,\,1
count);,1
\System.out.println("\gonna\,1
\toggleButtonDownFreq.selectedProperty().addListener((val,\,1
Map,1
OTHER,1
System.out.println(rows,1
testEnviroment,1
specifying,1
key=(String),1
for(String,1
hodl,1
>;),1
annoying,1
highlight,1
(!active),1
pouzivany//NOT,1
\UserProfile(loginUsernameField.getText(),\,1
poitn,1
Z,1
helper,1
handling,1
IMPORTANT!!!!!,1
\,From:"\\,1
\thread,\,1
osetrit,1
prioritized,1
Set,1
OKREM,1
preferences/user,1
{//invoke,1
\OpenChannel_Dynamic_Downloader.getTray().showMessage("\Downlaod\,1
downloadSpeedProperty().set((double),1
HERE//just,1
(lock),1
octableview,1
FILES,1
params,1
\"\Cancelled"\,\,1
\System.out.println("\Downloading\,1
finalized,1
du.setDownloaded(readed);,1
\fixed,\,1
playbackBuffer=new,1
optional,1
zero,1
\window,\,1
downlaods,1
getExceptArea,1
LATER,1
graphHolder.setCenter(null);,1
able,1
lib,1
Object();,1
DOWNLOADED,1
\endByte,\,1
warning,1
total,1
DownloadThread(String,1
alreday,1
TrayIcon.MessageType.WARNING);,1
fileName=generateFullName(url.toString());,1
non-null,1
autoCompleteTxtField.loadSuggestions(suggestions);,1
FxmlMainViewController.getStateSeries().getData().removeAll(FxmlMainViewController.getStateSeries().getData());//remove,1
rs.getString(3);,1
DTCACHE,1
4,1
reference,1
moment,1
SimpleStringProperty();,1
kB/s,1
require,1
t,1
!values.isEmpty()),1
When,1
UserProfile.getNumOfConThreads(),1
---,1
aplication,1
System.out.println(header,1
yo,1
oaccount,1
play,1
know,1
\(loginUsernameField.getText().equals("\"\)\,1
length,1
used.Has,1
\System.out.println("\LEENGHT\,1
logic..,1
user/,1
BYTE,1
AVERAGE,1
0001,1
storeItself),1
Bind,1
synchronized,1
inside,1
fragment,1
nonsegmented,1
\pane,\,1
Long>,1
\System.out.println("\BEFORE\,1
dunity,1
Downloader.removeDownload();,1
Downloader.getDtCache().parallelStream().filter((DownloadTask,1
  // XYChart.Series,1
Deal,1
...,1
calculates,1
\,test\,1
queued,1
DIRECTLY,1
revork,1
available,1
CTRL+C,1
\inserted"\);\,1
0)),1
ends,1
addign,1
means,1
values.get(0);,1
items:,1
MUCH,1
resultTable};,1
dtasky,1
//!!!!!!!!!!!!!!!!!!!!!!!!STOREITSELF,1
APPLICATION,1
JSUT,1
\"\Listener\,1
WITHIN,1
DATABASE,1
SimpleDoubleProperty(1);,1
//shoud,1
(values,1
observable,1
invokes,1
SimpleLongProperty(getSizeOf(source));,1
defualt,1
).start();,1
(initially,1
readingResources,1
restart,1
ALL,1
\notify,\,1
disallow,1
minuteees,1
alive,1
PREPARED,1
ma,1
IMPLEMENT,1
Sets,1
\dt.etaProperty().set("\"\);\,1
startin,1
access,1
\failed"\,\,1
retrieve,1
rs.getString(2);,1
this.partNum,1
e){,1
10,1
BASED,1
\source,\,1
downloadThreadList,1
http,1
wrong,1
du.getId());,1
\MINUTE,\,1
proper,1
FINISHING,1
reading,1
startup,1
OSTATNE,1
Filter,1
res,1
\filePath,\,1
\OpenChannel_Dynamic_Downloader.getTray().showMessage("\Download\,1
\name,please\,1
downlaoder,1
\safe,\,1
#..SOMETHING,1
\System.out.println("\seeking:"\+startByte\,1
List<DownloadTask>,1
parts,1
prompt,1
GRAPHS,1
used/,1
System,1
this.endByte,1
\users"\);\,1
\file.write(buffer,\,1
loadSuggestions(names.toArray(new,1
obsolete,1
information..,1
\,/data\,1
lock,1
checks,1
downloader,1
CODE,1
:D,1
//////////////////////,1
day,1
information,1
ServerSocket,1
Used,1
THIS//TODO,1
(partStart,1
MIGH,1
almost,1
-1),1
PRIMARY,1
Parent,1
downlad,1
HERE------------------------,1
filter((DownloadUnit,1
integer..,1
SimpleLongProperty(readDownloadedByteSize());//how,1
contructor,1
parsed/used,1
EVERY,1
PREROBIT,1
\"\\\"\\,1
builder,1
args,1
\progress,\,1
DONT,1
motherfuckeee,1
\/select,"\\,1
autoCompletionBinding,1
loader.load();,1
ffs,1
DownloadTasks,1
och,1
Predicate,1
Type,1
befofer,1
used.Bud,1
completed,1
this.numberOfParts,1
drop,1
UPDATED,1
object,1
loadTable();,1
#8e44ad,1
\FileUtils.FILETYPE_CSV,\,1
\URL(du.getSource()),du.getSize()\,1
\"\_oc_"\+MainDataModel.getInstance().getLatestId();\,1
also,1
myself,1
unschedule,1
false);,1
trycatch,1
Necessary,1
Exception,1
//probably,1
holder,1
\+url.substring(url.lastIndexOf("\."\));\,1
filePath,1
\HashMap<DownloadUnit,\,1
string,1
oboje,1
inclusive,1
url.matches(url);//check,1
mdoel,1
customized,1
detect,1
totalDownVal;,1
CHARTING,1
contains,1
owner,1
URLConnection.guessContentTypeFromName(url);,1
incognito,1
expose/,1
\WARNING,\,1
unacceptable./alebo,1
failed,1
\password,\,1
postfix,1
f.getFileName().toString().equals(du.getName())).count(),1
donload,1
\"\File\,1
units),1
ocTableView,1
checksupms,1
Matrix,1
\away,\,1
setChanged();,1
dt.resume();,1
ATM,1
LTHE,1
REF,1
Statements,1
lbl,1
FRAGMENTS,1
(String),1
property,1
downloads.add(dt);,1
holds,1
executes,1
\System.out.println("\--DEBUG\,1
blogpost,1
half,1
\TableView[]{generatedTable,\,1
getDownloads(),1
actual,1
Checks,1
Position,1
factory,1
priority,1
\name,\,1
conn.getContentLengthLong()///..,1
data),1
getHeaderFields(),1
att,1
\"\Mozilla/5.0..."\);\,1
started,1
authentificators,1
Execute,1
LAST,1
\"\:"\\,1
taskId;,1
SEPARATED,1
internal,1
ITEMS.,1
XYChart.Series(data);,1
\FileUtils.FILETYPE_PDF,\,1
above,1
byte[],1
SimpleStringProperty(LocalDateTime.now().format(DateTimeFormatter.ISO_LOCAL_DATE_TIME));,1
LOADS,1
//EVERYTHING,1
ETC,1
validation,1
oracle,1
SCHEDULER,1
jfxat,1
\"\Scheduled"\};\,1
sensitive,1
this.getName(),1
(downlaod,1
provide,1
UPDATE,1
actions/,1
\ITEMS,\,1
20,1
\lblLogin.setText("\incorrect\,1
\System.out.println("\WRITING\,1
ysure,1
0,1
\,du.getDirectory(),\,1
numberOfParts),1
pool,1
DISABLE,1
isFtr=true;//Application,1
this.startByte,1
automaticly,1
location//can,1
Created,1
elua,1
TAKE,1
//EXECUTES,1
downloadsDir;,1
situacie,1
partSize),1
corresponds,1
VSETKY,1
OpenChannel_Dynamic_Downloader.showEulaWindow();,1
partStartOffset[index],1
his,1
\Logger.getLogger(DownloadThread.class.getName()).log(Level.SEVERE,\,1
LOOP,1
Default,1
\(logProfile.getPreferences().getBoolean(Info.PreferenceData.PREF_USER_FIRST_TIME_RUN,\,1
setSome,1
And,1
\getName(),\,1
connections,1
49152-65535,1
(Parent),1
changes//not,1
partitioned,1
speedSeriesSeconds,1
partNum;,1
basicly//off,1
SINGLE,1
exit,1
ITS,1
multithreaded,1
presne,1
MULIPLE,1
BOOLEAN,1
CRUCIAL,1
effective,1
parameters/might,1
\this,\,1
TableView<MD5Pair>[],1
methods,1
type:,1
files,1
PARTIAL,1
\loginPasswordField.getText().equals("\"\))\,1
madProgrammer,1
sleep,1
{//not,1
database/i,1
BEST,1
OCTABLE,1
\it."\);\,1
\System.out.println("\Thread:"\\,1
@FXML,1
SHWO,1
reason,1
lower,1
filechannel,1
Reusable,1
\startByte,\,1
test27.java,1
imported,1
SOME,1
otherwise,1
fall,1
filePath;,1
startbyte+size,1
Compare,1
BIGINT,1
\url,\,1
JESUS,1
(header,1
sys,1
FTR,1
person,1
division,1
CHANGE,1
setting,1
creation,1
downloads.remove(du);,1
\as"\\,1
downloads;,1
completedOn,1
BROKEN,1
SHOW,1
DOBRE,1
\String[]{"\shit"\,\,1
insted,1
\now,\,1
PLAYBACK_BUFFER_SIZE=5000000;,1
somewhow,1
\started"\,\,1
\(?,?,?)"\))\,1
applicaitons,1
\dt:"\\,1
\completed"\);\,1
closing,1
wihtout,1
stateChanged();,1
BEREM,1
YET,1
\optimize,\,1
\wtf.."\);\,1
-1,1
24,1
HIGH,1
((startByte,1
controller,1
(newVal),1
CANCELLING,1
//parse,1
/-----------------------------------------------------,1
themself,1
loads,1
\users"\))\,1
startByte;,1
primStage,1
Parallel,1
leftover,1
\"\/something.something"\\,1
options,1
flag,1
ImageView,1
MUTABLE,1
\partSize,\,1
\CONECTIONS,\,1
END,1
textField,1
buffer.length)),1
dynamic,1
onAction,1
DANE,1
occupied,1
rewrite,1
relative,1
WHEN,1
value);,1
naco,1
objects//ones,1
SINCE,1
Observable,1
First,1
HOOK,1
context,1
0100,1
\"\.oc_partial.part"\;\,1
WORK,1
primary,1
d),1
\TextFields.bindAutoCompletion(this,possibleSuggestions);\,1
rows,1
handler,1
//http://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html,1
nad,1
much,1
;,1
OVERLOADED,1
DEFAULT,1
shows,1
Downloader.loadDownloads();,1
userprofile,1
getItems().removeAll(list);,1
another,1
\getClass().getResource("\/openchannel_dynamic_downloader/resources/html/speedTest.html"\).toExternalForm());\,1
//hide,1
this.setName(threadName);,1
dunits,1
POSSIBLE,1
an,1
\byte"\);\,1
ANYTHING,1
DownloadUnit.STATE_DOWNLOADING),1
loading,1
(MalformedURLException,1
storeitself,1
implementations,1
+=,1
placeholder,1
{//in,1
(urlValidator.isValid(url)),1
hsoud,1
refreshes,1
refreshrate,1
setGraphic(lbl);,1
ondo,1
OpenChannel_Dynamic_Downloader.showMainView();,1
loginPasswordField.getText());,1
actions,1
//END,1
SEGMENTED,1
nameFile,1
\enabled."\,\,1
hyperlinks..,1
optimized,1
numOfConnections.set(numberOfConnections);,1
run/,1
ObservableList,1
DOWNLOADING,1
tugether,1
(IANA),1
ukazovat,1
Object,1
ra,1
webEngine.load(,1
improve,1
CONSTRUCTORY,1
pokial,1
whenever,1
(getState(),1
this.taskId,1
DownloadUnits,1
TBE,1
situation,1
CARE,1
\System.out.println("\RESPONSE:"\\,1
graphHolder.setCenter(speedChart);,1
feature,1
RUN,1
\OpenChannel_Dynamic_Downloader.getTray().showMessage("\Folder\,1
Desktop.getDesktop().open(new,1
updates,1
SPECIFIED,1
Socket,1
numOfConnectionsPerDownload,1
player,1
dt.schedule();,1
utility,1
(sLength,1
DownloadUnit.STATE_DOWNLOADING,1
EXTRA,1
nice,1
FLAGS,1
CONTINUE,1
OBJECT,1
totalDownVal,1
security,1
downloadtask/,1
du.getSource());,1
Applys,1
FILTERING,1
supposed,1
contents,1
annotation,1
\numberOfConnections,\,1
dt.downloadSpeedProperty().set(0);,1
\CONTENT-LENGTH="\\,1
downlaodtask,1
suboru,1
DbUtil.getUsersTableInfo();,1
objects,1
\DATABSE,\,1
//vypocitaj,1
createdDThreads();,1
read,1
((count,1
internally,1
conn.getHeaderFields().get(header)),1
moze,1
connector.closeConnector();,1
ZLE,1
Download,1
speedSeriesHours,1
logProfile;,1
spawn,1
accept,1
shown,1
webpage,1
accoutns,1
usupposed,1
\in.read(buffer,\,1
testing,1
\partStartOffset[index],\,1
\ERROR,\,1
MIGHT,1
\threadName,\,1
//slight,1
\checksum,\,1
nullified//it,1
event,1
/create,1
limited,1
dal,1
threat,1
safe,1
numberOfParts;,1
stage;,1
SimpleLongProperty(i);//shoud,1
email),1
secur,1
\NULL)"\);\,1
overflow,1
easier,1
oldVal),1
further,1
thats,1
\stmt.setString(1,\,1
theyr,1
more,1
STATEMENTS,1
nastartuje,1
FxmlDownloadsViewController.removeItemFromOCTable(id);,1
\conn.getHeaderFields().get("\Content-Length"\);\,1
anaplni,1
passwords,1
.etc,1
totalDownVal.set(tempaAvgdp/tempDivBy);,1
\downloadDir,\,1
list),1
recognizes,1
rs.getString(1);,1
FileUtils.FILETYPE_XLSX);,1
lazy,1
Executor,1
ENTRIES,1
OpenChannel_Dynamic_Downloader.primStage.hide();,1
Creates,1
URLs,1
reReadFlags,1
validator,1
(!(Files.list(Paths.get(du.getDirectory())).filter((f),1
PLEASE,1
Downloader.createFinalHttpURLConnection(dtask.getSource());,1
few,1
invoke,1
providing,1
\BAR,\,1
APPLICAITON,1
valid.//probably,1
\System.out.println("\ok\,1
MANY,1
SAFE,1
s:getPossibleSuggestions()){,1
\threads"\);\,1
;D,1
even,1
simpleer,1
File(du.getDirectory()));,1
\"\ScrollPane\,1
view/eula,1
listeners,1
multipleSelection.stream(),1
notif,1
PERFORMANCE,1
once,1
CANNOT,1
//logged,1
getters,1
watch,1
yourself,1
populate,1
\System.out.println("\test99"\);\,1
active;,1
transfer,1
YOU,1
bad,1
limit,1
\ProcessBuilder("\explorer.exe"\,\,1
\System.out.println("\they\,1
CHECK,1
updateSearchField(new,1
Title,1
risk,1
making,1
requested,1
explorer,1
/*,1
averageDownloadSpeed,1
iterate,1
learning,1
FxmlDownloadsViewController.removeItemsFromOCTable(list);,1
\du,\,1
AUTO_INCREMENT,1
conn.getResponseMessage());,1
persons,1
variable,1
totalDownValProperty(),1
heavy,1
d.getId(),1
rebel,1
(DownloadTask.SizeNotDeterminedException,1
//ALSO,1
(1),1
eta,1
V,1
1024));,1
having,1
startByte),1
<T>,1
FX,1
this.filePath,1
du.getName());//open,1
return;,1
suport,1
1mb,1
visualisation,1
false;,1
upadte,1
(endByte,1
(logProfile.validate()),1
inform,1
functionality,1
METHOD,1
blocks,1
around,1
#6E2D8A,1
special,1
System.out.println(name,1
true)),1
SupportedLinks{,1
\Label("\State"\);\,1
possibleSuggestions=new,1
snad,1
optimal,1
osmething,1
coud,1
unoptimized.And,1
smooth,1
AL,1
screen/main,1
rate,1
OpenChannel,1
selection,1
OFFSET!!!!!!,1
think,1
creating,1
reuses,1
}).start();,1
String[names.size()]));,1
stages,1
faster,1
Downloader.getDownloads();,1
creates,1
differenteee,1
Files.size(Paths.get(filePath))),1
EXECUTE,1
f*ck,1
aktivny,1
normal,1
ucidim,1
differ,1
fxmlController/no,1
calcualte,1
VALUES,1
class,1
conn.getHeaderFields().keySet()),1
primaryStage,1
2000,1
feedback,1
help,1
useless,1
DONE,1
equal,1
Make,1
allowed,1
downloads.removeAll(activeDownloads);,1
conn.getResponseCode(),1
updated,1
\case"\\,1
\"\/select,"\\,1
please,1
style,1
graphic,1
//calculates,1
standalone,1
Does,1
kill,1
Aint,1
}catch(Exception,1
du.setState(DownloadUnit.STATE_DOWNLOADING);,1
SUCESS,1
pattern,1
ITSELF,1
this.directory=directory;,1
\getSizeOfFileSafe()+"\\,1
multipleSelection.stream().forEach((DownloadUnit,1
stmt.executeUpdate();,1
count;,1
matter,1
REMOVE,1
CONTROLLER,1
logInUser,1
reall,1
\message:"\\,1
browser,1
CTRL+SHIFT,1
POSLEDNEHO,1
downloadFile(DownloadUnit,1
sLength);,1
\Downloaded:"\\,1
\credentials"\);\,1
\System.out.println("\EMPTY\,1
passed,1
notifyObservers();,1
whats,1
BYTE.,1
UserProfile();,1
