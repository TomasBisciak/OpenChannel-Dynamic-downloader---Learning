Word,Count
*,423
,178
the,145
in,142
this,136
+,112
change,111
choose,105
To,104
=,99
and,97
template,96
to,93
if,68
of,64
{,63
new,61
TODO,61
|,59
be,59
},57
Templates,56
Tools,56
private,53
open,51
for,50
License,48
Headers,48
license,48
Project,48
\file,\,48
editor,48
Properties,48
\header,\,48
@author,47
NOT,46
not,42
/,39
\,\,39
from,36
tomas,32
on,30
it,29
@param,28
static,27
public,27
at,27
is,26
that,25
remove,25
\"\\,25
1024),24
download,24
check,23
dot,23
IN,23
here,23
coudnt,23
find,23
final,23
int,23
application,21
or,21
sure,20
TABLE,20
might,20
size,19
all,19
i,19
has,18
no,18
database,17
by,17
String,17
//,17
OF,17
downlaod,16
SimpleStringProperty,16
user,16
FOR,16
->,16
with,16
a,16
file,15
Kofola,15
data,14
preferences,14
THIS,14
into,14
set,14
state,13
long,13
VARCHAR(255),13
as,13
active,13
used,13
create,13
speed,12
else,12
db,12
start,12
todo,12
downloads,12
its,11
old,11
:,11
can,11
threads,11
IS,11
==,11
optimize,11
get,10
@return,10
FROM,10
TO,10
CREATE,10
downloaded,10
use,10
generated,10
have,10
view,10
scheduler,10
add,10
notification,10
try,10
will,10
1),10
-,9
THE,9
ON,9
thread,9
seconds,9
});,9
completion,9
already,9
SimpleLongProperty,9
maybe,9
are,9
catch,9
do,9
since,9
>,9
//stores,8
up,8
method,8
boolean,8
SimpleDoubleProperty,8
only,8
name,8
\methods,\,8
etc,8
BYTES/,8
AT,8
THAT,8
they,8
needed,8
multipleSelection.removeAll(multipleSelection);,8
url,8
\"\-"\\,8
body,8
care,8
case,8
bytes,8
runtime,8
REPRESENTED,8
STRING,8
text,8
default,7
LONG,7
there,7
id,7
INT,7
test,7
!=,7
resume,7
based,7
ex),7
other,7
ROWS,7
what,7
gonna,7
SET,7
some,7
dont,7
return,7
&&,7
work,6
like,6
IF,6
0),6
SimpleIntegerProperty,6
\"\"\)\,6
delete,6
1,6
VALUE,6
make,6
\null,\,6
something,6
well,6
changed,6
value,6
login,6
SELECTED,6
ex.printStackTrace();,6
show,6
minutes,6
getItems().removeAll(multipleSelection);//TODO,6
getItems().remove(row.getItem());,6
idea,6
values,6
update,6
password,6
table,6
number,6
WILL,6
stop,6
ex);,6
CAHNGE,6
totalSeconds,6
calculated,6
doesnt,5
go,5
\System.out.println("\PROGRESS\,5
sekundy,5
created,5
\:"\+((double)((long)newVal/getSize()))*100);\,5
kolko,5
later,5
cant,5
CHECK,5
returns,5
hours,5
just,5
flags,5
I,5
stiahlo,5
paused,5
one,5
progress.set(((double)((long)newVal/getSize()))*100);,5
when,5
\1,\,5
take,5
first,5
\NULL,"\\,5
down,5
zaklade,5
60,5
sa,5
probably,5
SURE,5
profile,5
different,5
DU,5
null),5
same,5
upon,5
before,5
fix,5
way,5
shoud,5
been,5
na,5
progress,5
za,5
DOWNLOAD,5
0.5,5
executed,5
every,5
then,5
after,5
necessery,5
bytov,5
instance,5
field,4
called,4
opt,4
source;,4
cause,4
we,4
names,4
\getSource(),\,4
supported,4
compute,4
need,4
valid,4
..,4
\NULL,name\,4
multiple,4
setSizeProperty(new,4
execute,4
downloading,4
thru,4
\numOfConnections.get(),\,4
\getStatement().execute("\CREATE\,4
Shows,4
getId(),4
LOAD,4
\VARCHAR(255),downloadDir\,4
\DownloadThread("\dt-"\\,4
part,4
USER,4
does,4
call,4
TASKS,4
DT,4
INTO,4
\"\state\,4
notify,4
filter,4
(i,4
hold,4
FILENAME_PARTIAL,4
\NULL,completedOn\,4
DATA,4
getDirectory(),4
binding,4
TASK,4
60;,4
stored,4
nonstop,4
\"\/"\\,4
\NULL,added\,4
THREAD,4
\getId(),\,4
downloadThreadList.add(new,4
STATE,4
volatile,4
);,4
instead,4
exception,4
progress.bind(downloaded.divide(size).divide(100));,4
later.,4
so,4
kb/s,4
ineffective,4
AND,4
optimized,4
set//file,4
woud,4
index,4
USE,4
BE,4
ARE,4
\"\source\,4
port,4
>=,4
A,4
getNumberOfConnections()));,4
\NULL,size\,4
where,4
changes,4
/TESTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTT,4
3;,4
super,4
series,4
DOWNLAOD,4
last,4
DB,4
im,4
dt),4
must,4
vypocitaj,4
%,4
//TODO,4
me//,4
DOWNLOADS,4
added,4
bud,4
now,4
inactive,4
error();,4
downloads(id,4
partial,4
CASE,3
email,3
possibleSuggestions.addAll(Arrays.asList(suggestions));,3
.,3
\Logger.getLogger(Downloader.class.getName()).log(Level.SEVERE,\,3
running,3
STREAM,3
BUD,3
'/',3
wont,3
\"\Completed"\,\,3
ones,3
SimpleDoubleProperty(0.5);,3
VARCHAR(1000),3
form,3
void,3
going,3
while,3
were,3
IMPLEMENTATION,3
AS,3
UserProfile,3
extra,3
current,3
kind,3
them,3
added;//calculates,3
again,3
connection,3
IMPORTANT,3
any,3
posun,3
segmented,3
\{"\Failed"\,\,3
\1),\,3
||,3
//notify,3
getName(),3
directory;,3
give,3
DownloadTask,3
vsetky,3
displayed,3
store,3
o,3
\0,\,3
FIRST,3
offset,3
mess,3
parallel,3
(long),3
load,3
units,3
takes,3
pre,3
each,3
WITH,3
(size,3
close,3
folder,3
(notification,3
clipboard,3
mode,3
existing,3
getSizeOf(source),3
SimpleIntegerProperty(CONNECTIONS_DEF);,3
START,3
itself,3
PAUSED,3
/*,3
how,3
\FileUtils.exportDataFromTable(tableView,\,3
id;,3
end,3
\"\Downloading"\,\,3
contains,3
\SimpleStringProperty("\Not\,3
name;//can,3
STATE_STRINGS,3
String[],3
downloadUnitCache,3
once,3
ONLY,3
PREFERENCES,3
header,3
pane,3
WAY,3
range,3
CAN,3
THEN,3
this.id,3
time,3
\"\Paused"\,\,3
info,3
fuckn,3
dt,3
du),3
capslock,3
numOfConnections,3
RESUME,3
BIGINT,3
downloadSpeed,3
ADD,3
EXECUTION,3
TESTING,3
SCHEDULED,3
see,3
downloaded;//STORED,3
more,3
completedOn;////calculates,3
fuck,3
HERE,3
SimpleLongProperty(id);,3
items,3
\auto_increment,"\\,3
safe,3
SimpleDoubleProperty(0);,3
bigint,3
popup,3
this.size,3
cases,3
\"\CREATE\,3
;//not,3
DEFAULT,3
size;//STORED,3
regex,3
loaded,3
SimpleIntegerProperty(STATE_DOWNLOADING);,3
tasks,3
display,3
you,3
\NULL);"\\,3
\TextFields.bindAutoCompletion(this,\,3
either,3
SimpleLongProperty(size);,3
overriden,3
move,3
was,3
\NULL,connections\,3
WORKS,3
getNumberOfConnections(),3
eta;//based,3
OpenChannel_Dynamic_Downloader.getTray(),3
averageSpeed;,2
done,2
window,2
du.setState(DownloadUnit.STATE_DOWNLOADING);,2
pointer,2
BEFORE,2
feature,2
\"\h\,2
SimpleLongProperty(0));,2
CARE,2
VALUES,2
situation,2
switch,2
deletion,2
stage,2
applicaiton,2
SimpleStringProperty(fileName));,2
put,2
downloadsDir=new,2
@throws,2
OUTSIDE,2
cached,2
HashSet<>(Arrays.asList(suggestions));,2
SimpleStringProperty(source.toString()));,2
FXAT,2
((hours,2
writing,2
Currently,2
pause,2
methods,2
1;//means,2
correct,2
ready,2
getConnection().commit();,2
d),2
MULTIPLE,2
setEtaProperty(new,2
END,2
uses,2
WHILE,2
Queued,2
options,2
even,2
oldVal.longValue(),2
\dt:"\\,2
\"\s"\\,2
testing,2
average,2
TrayIcon.MessageType.INFO);,2
keep,2
setDownloadSpeedProperty(new,2
NULL,2
true;,2
SMOOTHING_FACTOR),2
SEGMENTED,2
logProfile,2
executor.submit(new,2
STOPS,2
BACKGROUND,2
DO,2
proxy,2
yet,2
SimpleLongProperty(id));,2
position,2
FxmlDownloadsViewController.addItemToOCTable(dt);,2
vo,2
https://community.oracle.com/thread/3677813?start=0&tstart=0,2
notifierType,2
FUCKN,2
1000,2
read,2
STORED,2
LOADING,2
PARALLEL,2
-1;,2
SINGLE,2
\du.getNumberOfConnections(),\,2
fkn,2
NORMAL,2
too,2
\getSize(),\,2
SOMETHING,2
FILE,2
setDirectory(directory);,2
Just,2
parameter,2
STATE_CANCELLED,2
List,2
som,2
saved,2
setNameProperty(new,2
jfxat,2
executing,2
setSourceProperty(new,2
KILL,2
\offsets()"\);\,2
stmt,2
above,2
CONTRUCTOR,2
ELSE,2
constant,2
per,2
getDownloaded()),2
(SQLException,2
(PreparedStatement,2
s,2
Might,2
\"\m\,2
CREATING,2
execution,2
scheduled,2
ak,2
multipleSelection.stream(),2
//slight,2
null,2
listener,2
UNDER,2
shodu,2
getItems().removeAll(multipleSelection);,2
beign,2
((seconds,2
block,2
(IOException,2
possible,2
run,2
title,2
execture,2
sheduled,2
Created,2
logged,2
\Logger.getLogger(DownloadTask.class.getName()).log(Level.SEVERE,\,2
\SimpleStringProperty("\test"\));\,2
SimpleLongProperty(getSizeOf(source)));,2
ETC,2
dir,2
FORCE,2
character,2
4;,2
RUNNING,2
SimpleLongProperty(size));,2
partStartOffset,2
logic,2
SQLException,2
statistics,2
num,2
\"\sa"\);\,2
iteration,2
downloader,2
filter((DownloadUnit,2
comparator,2
dt.resume();,2
HAVE,2
ill,2
etaProperty().set(,2
Desktop.getDesktop().browse(null);,2
your,2
FilteredList,2
bool,2
activate,2
refresh,2
ACTUAL,2
STATE_SCHEDULED,2
previous,2
aj,2
implement,2
fxml,2
CORRECT,2
Using,2
JSUT,2
screen,2
ts=text.toCharArray().length;,2
access,2
AFTER,2
SimpleDoubleProperty(0.0));,2
EVEN,2
contained,2
BEIGN,2
setNumberOfConnections(numberOfConnections);,2
oldDownSize),2
ui,2
works,2
setIdProperty(new,2
parameters,2
\DownloadTask(du.getName(),\,2
d.getId(),2
PRIMARY,2
DBUtil,2
TEST,2
eula,2
bit,2
Color,2
HttpURLConnection,2
removed,2
Main,2
about,2
CONNECTIONS_DEF,2
downloadDir;//not,2
averageSpeed;//in,2
\notification,\,2
revork,2
second,2
this.source,2
Downloader.getDtCache().parallelStream().filter((DownloadTask,2
setDownloadedProperty(new,2
mb,2
best,2
https,2
conn,2
know,2
downloadSpeed.set(((getDownloaded(),2
THEM,2
\time,\,2
If,2
specified,2
KEDZE,2
total,2
FXCollections.observableArrayList());,2
false;,2
lats,2
STATE_PAUSED,2
3600;,2
\System.out.println("\gonna\,2
2;,2
fucked,2
byte,2
\completed"\));\,2
resolutions,2
prolly,2
(String,2
MOST,2
Platform.runLater((),2
dtCache.add(dt);,2
\partStart,\,2
CASES,2
KED,2
implemnt,2
URL,2
downlaoded,2
\SimpleStringProperty(Info.OC_DOWNLOADS_DIR+getUsername()+"\\\"\);\,2
debug,2
(1,2
imgUrl,2
Wrap,2
written,2
deactivate,2
osmething,2
validate,2
creates,2
e.printStackTrace();,2
within,2
directly,2
websites,2
convert,2
avgdp,2
Application,2
makes,2
(du.getState(),2
whatever,2
\"\Cancelled"\};\,2
eh,2
DOES,2
IT,2
initialization,2
2);,2
Singleton,2
\DOINGTHINGS,\,2
SimpleStringProperty(LocalDateTime.now().format(DateTimeFormatter.ISO_LOCAL_DATE_TIME)));,2
under,2
SMOOTHING_FACTOR,2
((getSize(),2
OFF,2
KIND,2
cell,2
dispose,2
JUST,2
SortedList,2
insert,2
(index,2
dt.getId());,2
desktop,2
\"\;\,2
class,2
ANY,2
STATE_COMPLETED,2
really,2
3600),2
ignore,2
Text,2
US,2
toggles,2
(totalSeconds,2
Thread(dt).start();,2
recreate,2
STATE_DOWNLOADING,2
closed,2
OPTIMIZED,2
possibleSuggestions);,2
nevim,2
long[numberOfConnections];,2
which,2
boolean[numberOfConnections];,2
compiler,2
right,2
actually,2
threadFinishFlags,2
tables,2
included,2
//todo,2
CREATED,2
Download());,2
UNITS,2
possibleSuggestions,2
tray,2
((minutes,2
btw,2
pref,2
frame,2
mainly,2
downlaoding,2
averageSpeed,2
executor,2
main,2
setAddedProperty(new,2
multipleSelection.stream().forEach((DownloadUnit,2
matter,2
//compiler,2
dt.getId()).count(),2
format,2
conn.setInstanceFollowRedirects(true);,2
STATE_FAILED,2
milisec,2
unit,2
MAYBE,2
TIME,2
Loads,2
scroll,2
panel,2
REMOVE,2
0).forEach((DownloadTask,2
constructor,2
THREADS,2
BUT,2
\:"\\,2
notifications,2
continue,2
0;,2
setCompletedOnProperty(new,2
button,2
\done,cancelled,failed,\,1
\EXISTENT,\,1
SU,1
tableData,1
users,1
download/if,1
DIFFERENT,1
0x-80000000,1
oldDownSize,1
SimpleStringProperty(source.toString());,1
THRU,1
log,1
downloads.stream().filter((du),1
(Files.size(Paths.get(filePath))),1
\CHANGES"\,2000);//todo\,1
path,1
BREAK,1
screen/stage,1
DownloadTask.SizeNotDeterminedException,1
occured,1
versions,1
\progress:"\\,1
repair,1
?..,1
code,1
BYT,1
VIEW,1
stmt.executeQuery()),1
existance,1
wanna,1
buffer.,1
privacy,1
CANT,1
DOWNLOADS!!!!!!!!!!!!,1
redirections,1
process//or,1
ports,1
filed,1
writes,1
\conn.setRequestProperty("\User-Agent"\,\,1
CONNECITON,1
quick,1
portion,1
app,1
\started,starter\,1
operaciami,1
this.getColumns().add(downloadedColumn);,1
FUNGUJE,1
IWLL,1
dSizeMap,1
!=DownloadUnit.STATE_PAUSED,1
crucial,1
generate,1
IMPORTANT!,1
discard,1
\getConnection().prepareStatement("\INSERT\,1
buttons,1
settings,1
any//,1
addItemToOCTable,1
WROOOOOOOONG,1
them.PROBLEM,1
TrayIcon.MessageType.ERROR);,1
//stack,1
seocnds/minutes,1
fucks,1
ocmmons,1
DailyStat:,1
controlled,1
\B"\);\,1
endByte),1
\INFORMATION,\,1
stats,1
walk,1
Flag,1
URL(url);,1
task,1
0010,1
\paused,\,1
\getConnection().prepareStatement("\select\,1
du,1
jsut,1
osem,1
\partNum,\,1
Parralel,1
menu,1
\stmt.setString(3,\,1
compare,1
confirm,1
off,1
3,1
pressed,1
downloader.handleRedirect,1
((((item,1
mfrom,1
he,1
/help,1
FxmlDownloadsViewController.removeItemFromOCTable(dt);,1
iterations,1
readed,1
\NULL,downloaded\,1
Downloader.createFinalHttpURLConnection(url.toString());,1
may,1
null);,1
\same"\);\,1
character//will,1
SimpleStringProperty(fileName);,1
interpupted,1
removeDThreads();,1
rs,1
\"\shizzle"\});//TODO\,1
FUCK,1
logProfile.login();,1
\WHILE"\);\,1
zapisuj,1
TableView,1
pieces,1
ONES,1
dt.setState(DownloadUnit.STATE_SCHEDULED);//,1
EXIT,1
SHECULER.,1
getDownloaded();//prolly,1
try{,1
bip,1
ACCOUNT,1
EXTENDED,1
resource//might,1
\Runtime.getRuntime().exec("\explorer.exe\,1
transition,1
clears,1
imgLoader;,1
\System.out.println("\ITEM:"\+s+"\\n"\);\,1
condition,1
problem,1
keyCode:,1
sLength,1
out,1
maximum,1
CONDITIO,1
iterable,1
OSET,1
este,1
\icon.displayMessage("\OpenChannel"\,\,1
file/or,1
\System.out.println("\Table\,1
calls,1
z,1
MAKE,1
/session,1
timeapplication,1
include,1
co,1
creative,1
depends,1
list,1
getPossibleSuggestions());,1
adn,1
STOP,1
matches,1
PER,1
IOException,1
pref=Preferences.userRoot().node,1
PANE,1
speedSeriesMinutes,1
\originalTable,\,1
anything,1
lambda,1
OCTableView,1
poses,1
2,1
latest,1
\FxmlMainViewController.showPaneNotification("\HELLO\,1
event),1
reversed,1
away,1
KEY,1
ocTableView.setItems();,1
\fileName,\,1
LOADUJU,1
\stmt.setString(2,\,1
(rs.next()),1
downloads.stream().forEach((DownloadUnit,1
UserProfile();,1
Create,1
HTTP,1
'yyyyMMdd',1
storeItself,1
1k,1
CONFIRM,1
review,1
loginBtn.setOnMouseClicked((MouseEvent,1
windows/,1
ZA,1
IMPORTANT!!!!!!!!!!!!IMPORTANT!!!!!!!!!!!!IMPORTANT!!!!!!!!!!!,1
\FILE"\);\,1
usefull,1
INSTANCE,1
using,1
OPTIMIZE,1
secured,1
BY,1
objects//active/paused,1
selected,1
accepted,1
endByte;,1
datasets,1
Label,1
//TEST,1
tray/,1
\"\Logged\,1
(ResultSet,1
du.getDirectory(),1
system,1
MAJU,1
\"\"\;\,1
icon,1
message,1
CODE!!!,1
littlebit,1
DOWNLAODS,1
wants,1
\oldVal,\,1
save,1
params,1
Thread((),1
prepared,1
\empty,\,1
root,1
\db,\,1
newVal,1
\bytes"\);\,1
invalid,1
error,1
\KB"\);\,1
\dailyStats();"\\,1
MOTHERFUCKN,1
enabled,1
DOWNLOADED,1
warning,1
taken,1
downloads.add(du);,1
removeItemsOnEvent(List<DownloadTask>,1
enum,1
WTF,1
STATE/APPLICATION,1
overload,1
top,1
\(name,\,1
takze,1
dataLocSpaceLock[FileUtils.getNumOfDisk()];,1
email);,1
tempDivBy:,1
autoCompleteTxtField.loadSuggestions(suggestions);,1
deleted,1
program,1
master,1
INITIALIZE,1
Bisciak,1
readingResources,1
recommended,1
false,1
\sure,\,1
loadSuggestions();,1
Graphic,1
CUSTOM,1
globalkey,1
(((long),1
intensive,1
NTO,1
raf.close();,1
wait.or,1
\XYChart.Data(state,\,1
everything,1
prefix,1
HashMap<>();//,1
seek,1
apply,1
INCOGNITO,1
citaj,1
PARTY,1
Opens,1
\taskId,\,1
fight,1
shutdown,1
mal,1
initialized,1
suggested,1
widths,1
MAYBE/.,1
DAILY,1
byt,1
limiting,1
match,1
without,1
count);,1
dedicated,1
OK,1
specific,1
\TB"\);\,1
FUNGOVAT/,1
redownlaoded,1
small,1
Miliseconds,1
OTHER,1
MOVED,1
(Exception,1
gain//fixed,1
getStatement().execute(,1
allow,1
LOADED,1
over,1
dtcache,1
clear,1
je,1
sucessfully,1
daily,1
autoexec,1
hodl,1
\du.getDirectory(),\,1
proper,1
/SWITCH,1
\then,\,1
>;),1
poitn,1
bar,1
handling,1
MCONSOLE,1
byte[PLAYBACK_BUFFER_SIZE];,1
System.out.println(rows,1
testEnviroment,1
specifying,1
execute(),1
key=(String),1
for(String,1
LOGGIN,1
IMPORTANT!!!!!,1
annoying,1
highlight,1
\UserProfile(loginUsernameField.getText(),\,1
\thread,\,1
Z,1
{//disallow,1
prioritized,1
OKREM,1
\,From:"\\,1
liek,1
osetrit,1
{//invoke,1
Set,1
PRINT,1
preferences/user,1
DEFUALT,1
\OpenChannel_Dynamic_Downloader.getTray().showMessage("\Downlaod\,1
downloadSpeedProperty().set((double),1
HERE//just,1
octableview,1
FILES,1
\,/data\,1
newVal),1
\System.out.println("\Downloading\,1
close/tray,1
du.setDownloaded(readed);,1
\fixed,\,1
\"\Cancelled"\,\,1
optional,1
finalized,1
playbackBuffer=new,1
downlaods,1
param,1
createDailyStatsTable(),1
LATER,1
\window,\,1
able,1
lib,1
Object();,1
helper,1
\endByte,\,1
MIGH,1
contructor,1
DownloadThread(String,1
alreday,1
limit,1
fileName=generateFullName(url.toString());,1
non-null,1
DownloadTasks,1
kB/s,1
rs.getString(3);,1
DTCACHE,1
length,1
\tempaAvgdp:"\\,1
reference,1
moment,1
SimpleStringProperty();,1
used.Has,1
require,1
setText((((item,1
t,1
!values.isEmpty()),1
When,1
UserProfile.getNumOfConThreads(),1
---,1
aplication,1
getExceptArea,1
yo,1
oaccount,1
play,1
TITLED,1
dailyStats,1
\(loginUsernameField.getText().equals("\"\)\,1
\System.out.println("\LEENGHT\,1
Long>,1
calculates,1
logic..,1
user/,1
BYTE,1
AVERAGE,1
\,test\,1
available,1
Bind,1
System.out.println(header,1
inside,1
fragment,1
AM,1
nonsegmented,1
DATABASE,1
invokes,1
\System.out.println("\BEFORE\,1
dunity,1
Downloader.removeDownload();,1
).start();,1
  // XYChart.Series,1
0001,1
UPDATED,1
\System.out.println("\DEBUG\,1
disallow,1
queued,1
DIRECTLY,1
minuteees,1
colored,1
...,1
CTRL+C,1
\inserted"\);\,1
0)),1
ends,1
addign,1
sake,1
resolutionLabel);,1
means,1
values.get(0);,1
items:,1
MUCH,1
resultTable};,1
dtasky,1
//!!!!!!!!!!!!!!!!!!!!!!!!STOREITSELF,1
IMPLEMENT,1
retrieve,1
\dailyStats("\\,1
WITHIN,1
rs.getString(2);,1
SimpleDoubleProperty(1);,1
10,1
(values,1
APPLICATION,1
http,1
SimpleLongProperty(getSizeOf(source));,1
defualt,1
TableView<MD5Pair>[],1
(initially,1
\MINUTE,\,1
restart,1
ALL,1
\notify,\,1
Filter,1
//shoud,1
alive,1
PREPARED,1
ma,1
prompt,1
observable,1
Short,1
\dt.etaProperty().set("\"\);\,1
USED,1
used/,1
\failed"\,\,1
loads,1
:D,1
information,1
Sets,1
ServerSocket,1
BASED,1
startin,1
downloadThreadList,1
e){,1
wrong,1
DOWNLAODED,1
value);,1
almost,1
link,1
FINISHING,1
reading,1
\source,\,1
OSTATNE,1
gettin,1
\LONG);"\\,1
res,1
\filePath,\,1
\OpenChannel_Dynamic_Downloader.getTray().showMessage("\Download\,1
\'0'"\\,1
\name,please\,1
downlaoder,1
\safe,\,1
#..SOMETHING,1
player,1
List<DownloadTask>,1
Dec,1
startup,1
och,1
GRAPHS,1
Files.deleteIfExists(Paths.get(d.getDirectory(),1
System,1
this.endByte,1
\users"\);\,1
\file.write(buffer,\,1
loadSuggestions(names.toArray(new,1
obsolete,1
information..,1
object,1
lock,1
checks,1
loadTable();,1
CODE,1
HENTO,1
myself,1
//////////////////////,1
\System.out.println("\seeking:"\+startByte\,1
inclusive,1
parts,1
Used,1
THIS//TODO,1
unacceptable./alebo,1
donload,1
units),1
Matrix,1
utility,1
Parent,1
downlad,1
HERE------------------------,1
LTHE,1
integer..,1
id);,1
invoked,1
SimpleLongProperty(readDownloadedByteSize());//how,1
BIGINT),1
UP,1
Statements,1
ADDITIONAL,1
EVERY,1
PREROBIT,1
\"\\\"\\,1
builder,1
}.execute();,1
\stmt.setLong(DB_INDEX_DS_IDDATE,\,1
args,1
\progress,\,1
DONT,1
downloads.add(dt);,1
\/select,"\\,1
autoCompletionBinding,1
loader.load();,1
ffs,1
Checks,1
\scene.getStylesheets().add("\barchartsample/Chart.css"\);\,1
factory,1
Predicate,1
day,1
INITIALIZATION,1
used.Bud,1
completed,1
this.numberOfParts,1
priority,1
conn.getContentLengthLong()///..,1
parsed/used,1
att,1
Downloader.removeDownloads(multipleSelection);,1
SKUSIM,1
#8e44ad,1
\FileUtils.FILETYPE_CSV,\,1
\URL(du.getSource()),du.getSize()\,1
\"\_oc_"\+MainDataModel.getInstance().getLatestId();\,1
also,1
Type,1
unschedule,1
false);,1
trycatch,1
LAST,1
Exception,1
//probably,1
holder,1
\+url.substring(url.lastIndexOf("\."\));\,1
cleanup,1
internal,1
string,1
oboje,1
ITEMS.,1
NEBUDE,1
=file.toString();,1
\hBoxGraphHolderMenuRight.getChildren().add(0,\,1
\CAST(FORMATDATETIME(CURRENT_TIMESTAMP(),\,1
url.matches(url);//check,1
mdoel,1
customized,1
FINISHED,1
detect,1
totalDownVal;,1
CHARTING,1
LOADS,1
//EVERYTHING,1
\"\Scheduled"\};\,1
OPTIMIZE!,1
expose/,1
\WARNING,\,1
actions/,1
ysure,1
\password,\,1
Necessary,1
hour,1
f.getFileName().toString().equals(du.getName())).count(),1
filePath,1
\"\File\,1
numberOfParts),1
*Thread,1
checksupms,1
corresponds,1
partStartOffset[index],1
setChanged();,1
postfix,1
\Logger.getLogger(DownloadThread.class.getName()).log(Level.SEVERE,\,1
LOOP,1
REDIRECT,1
Default,1
setSome,1
\away,\,1
FRAGMENTS,1
(String),1
property,1
speedSeriesSeconds,1
totalDownDataStringProperty,1
REF,1
comboboxes,1
executes,1
lbl,1
presne,1
half,1
range//only,1
\TableView[]{generatedTable,\,1
getDownloads(),1
actual,1
\this,\,1
Position,1
SHWO,1
FTR,1
PRINTOUTS,1
\name,\,1
somewhow,1
holds,1
theyr,1
\completed"\);\,1
\"\Mozilla/5.0..."\);\,1
started,1
\//getStatement().execute("\CREATE\,1
authentificators,1
data),1
period,1
I/O!only,1
Execute,1
\"\:"\\,1
ds);,1
\"\/something.something"\\,1
ImageView,1
XYChart.Series(data);,1
stateSeries.getData().add(new,1
textField,1
setText(item,1
byte[],1
SimpleStringProperty(LocalDateTime.now().format(DateTimeFormatter.ISO_LOCAL_DATE_TIME));,1
WHEN,1
OpenChannel_Dynamic_Downloader.primStage.hide();,1
view/eula,1
reality,1
taskId;,1
oracle,1
SCHEDULER,1
validation,1
another,1
ehre,1
dunits,1
this.getName(),1
(downlaod,1
provide,1
UPDATE,1
an,1
\ITEMS,\,1
sensitive,1
20,1
\System.out.println("\WRITING\,1
hsoud,1
\lblLogin.setText("\incorrect\,1
\,du.getDirectory(),\,1
\27,\,1
pool,1
0,1
TAKTO,1
ondo,1
this.startByte,1
automaticly,1
OpenChannel_Dynamic_Downloader.showMainView();,1
elua,1
TAKE,1
cloudsync,1
DISABLE,1
situacie,1
partSize),1
hyperlinks..,1
VSETKY,1
run/,1
RUN,1
his,1
yourself,1
active;,1
Author,1
\(logProfile.getPreferences().getBoolean(Info.PreferenceData.PREF_USER_FIRST_TIME_RUN,\,1
downloadsDir;,1
date,1
DownloadUnit.STATE_DOWNLOADING,1
\getName(),\,1
connections,1
49152-65535,1
(Parent),1
And,1
partitioned,1
nice,1
changes//not,1
basicly//off,1
TAKING,1
averageDownloadSpeed,1
ITS,1
multithreaded,1
partNum;,1
MULIPLE,1
mainDataModel,1
CRUCIAL,1
effective,1
parameters/might,1
\numberOfConnections,\,1
dt.downloadSpeedProperty().set(0);,1
setText(((((item,1
type:,1
\CONTENT-LENGTH="\\,1
PARTIAL,1
\loginPasswordField.getText().equals("\"\))\,1
madProgrammer,1
sleep,1
database/i,1
conn.getHeaderFields().get(header)),1
OCTABLE,1
\it."\);\,1
\System.out.println("\Thread:"\\,1
MainDataModel,1
@FXML,1
TAKES,1
connector.closeConnector();,1
reason,1
multipleselection,1
lower,1
filechannel,1
Reusable,1
\startByte,\,1
test27.java,1
imported,1
SOME,1
tableView,1
fall,1
constants,1
filePath;,1
startbyte+size,1
Compare,1
shown,1
\url,\,1
BOOLEAN,1
sys,1
accoutns,1
person,1
persons,1
CHANGE,1
setting,1
otherwise,1
\as"\\,1
downloads;,1
completedOn,1
BROKEN,1
SHOW,1
limited,1
sense,1
dal,1
(header,1
du.getName());//open,1
PLAYBACK_BUFFER_SIZE=5000000;,1
amount));,1
STATEMENTS,1
properties,1
\(?,?,?)"\))\,1
\downloadDir,\,1
downloads.remove(du);,1
sounds,1
list),1
closing,1
wihtout,1
DEBUG,1
BEREM,1
YET,1
\optimize,\,1
\wtf.."\);\,1
insted,1
24,1
HIGH,1
recognizes,1
((startByte,1
controller,1
CANCELLING,1
//parse,1
Files.size(Paths.get(filePath))),1
Creates,1
URLs,1
\started"\,\,1
/REMOVE,1
startByte;,1
few,1
STATS,1
invoke,1
-1,1
MANY,1
EXECUTE,1
\users"\))\,1
notif,1
Parallel,1
\message:"\\,1
leftover,1
\System.out.println("\they\,1
EXCEPTIONS,1
buffer.length)),1
dynamic,1
onAction,1
DANE,1
occupied,1
rewrite,1
relative,1
flag,1
making,1
naco,1
MUTABLE,1
SINCE,1
Observable,1
First,1
HOOK,1
context,1
0100,1
shit,1
\CONECTIONS,\,1
WORK,1
primary,1
requested,1
startByte),1
learning,1
handler,1
oldVal),1
previously,1
nad,1
much,1
;,1
objects//ones,1
heavy,1
shows,1
Downloader.loadDownloads();,1
CHANGES,1
userprofile,1
getDailyStats,1
getItems().removeAll(list);,1
still,1
\"\.oc_partial.part"\;\,1
1024));,1
FX,1
1:09:21,1
POSSIBLE,1
this.filePath,1
\byte"\);\,1
ANYTHING,1
DownloadUnit.STATE_DOWNLOADING),1
loading,1
(MalformedURLException,1
OVERLOADED,1
implementations,1
((item,1
\MB"\);\,1
\getClass().getResource("\/openchannel_dynamic_downloader/resources/html/speedTest.html"\).toExternalForm());\,1
primStage,1
\FileUtils.FILETYPE_PDF,\,1
(urlValidator.isValid(url)),1
(logProfile.validate()),1
inform,1
refreshrate,1
anythign,1
storeitself,1
\auto_increment,downloadedAmount\,1
METHOD,1
+=,1
loginPasswordField.getText());,1
around,1
//END,1
placeholder,1
nameFile,1
\enabled."\,\,1
setGraphic(lbl);,1
Map,1
numOfConnections.set(numberOfConnections);,1
rate,1
ObservableList,1
him,1
tugether,1
(IANA),1
ukazovat,1
Object,1
anyway,1
webEngine.load(,1
improve,1
CONSTRUCTORY,1
pokial,1
ra,1
f*ck,1
this.taskId,1
DownloadUnits,1
TBE,1
normal,1
POTOM,1
whenever,1
\GB"\);\,1
primaryStage,1
@Override,1
\System.out.println("\RESPONSE:"\\,1
conn.getResponseCode(),1
shutdownhook,1
\OpenChannel_Dynamic_Downloader.getTray().showMessage("\Folder\,1
Desktop.getDesktop().open(new,1
updates,1
SPECIFIED,1
Socket,1
numOfConnectionsPerDownload,1
graphic,1
//calculates,1
standalone,1
DATE,1
(sLength,1
opens,1
count,1
EXTRA,1
\downloadedProperty().addListener((val,\,1
FLAGS,1
row,1
OBJECT,1
sLength);,1
d.getName()));,1
passed,1
downloadtask/,1
du.getSource());,1
Applys,1
below,1
logInUser,1
rather,1
annotation,1
this.directory=directory;,1
CONTINUE,1
task//session,1
style,1
\incrementDownBytesSession,\,1
downlaodtask,1
WINDOW,1
totalDownVal,1
objects,1
FILTERING,1
//vypocitaj,1
suport,1
supposed,1
internally,1
contents,1
WHERE,1
\2015,\,1
moze,1
this.partNum,1
ZLE,1
Download,1
speedSeriesHours,1
comfortable,1
logProfile;,1
spawn,1
accept,1
security,1
webpage,1
tested,1
usupposed,1
\in.read(buffer,\,1
\TextFields.bindAutoCompletion(this,possibleSuggestions);\,1
\partStartOffset[index],\,1
\ERROR,\,1
blogpost,1
\threadName,\,1
OpenChannel_Dynamic_Downloader.showEulaWindow();,1
\checksum,\,1
\DATABSE,\,1
event,1
((count,1
HENT,1
du.getId());,1
threat,1
\pane,\,1
ofthese,1
numberOfParts;,1
TrayIcon.MessageType.WARNING);,1
SimpleLongProperty(i);//shoud,1
email),1
secur,1
MIGHT,1
stage;,1
easier,1
getHeaderFields(),1
\System.out.println("\TEST98-Avg\,1
\NULL)"\);\,1
\stmt.setString(1,\,1
initialize,1
statistics(date,1
nullified//it,1
\URL(du.getSource()),\,1
FxmlDownloadsViewController.removeItemFromOCTable(id);,1
overflow,1
anaplni,1
passwords,1
watch,1
thrown,1
totalDownVal.set(tempaAvgdp/tempDivBy);,1
custom,1
\"\)"\\,1
(((item,1
WHAT,1
rs.getString(1);,1
further,1
fxap,1
*/,1
lazy,1
!!!!!!!!!!!!!!!!!!,1
ENTRIES,1
Executor,1
UPPER,1
situations,1
\file."\,\,1
reReadFlags,1
validator,1
(!(Files.list(Paths.get(du.getDirectory())).filter((f),1
Downloader.createFinalHttpURLConnection(dtask.getSource());,1
eta,1
providing,1
du.getName(),1
Tomas,1
ITSELF,1
APPLICAITON,1
valid.//probably,1
\System.out.println("\ok\,1
downloadUnit,1
SAFE,1
s:getPossibleSuggestions()){,1
java.lang.Long,1
;D,1
authentificator,1
ocTableView//this,1
//must,1
\"\ScrollPane\,1
efectively,1
stuff,1
listeners,1
\files,//MOVED\,1
HashSet<>(possibleSuggestions);,1
PERFORMANCE,1
ok,1
CANNOT,1
//logged,1
getters,1
removeItemsOnEvent();,1
idea..,1
populate,1
\System.out.println("\test99"\);\,1
hide,1
transfer,1
YOU,1
bad,1
(((((item,1
authentificated,1
\ProcessBuilder("\explorer.exe"\,\,1
Mapped,1
SPEED,1
Info,1
updateSearchField(new,1
Title,1
risk,1
divBy);,1
performance,1
MUST,1
zero,1
NO,1
explorer,1
4,1
storeItself),1
iterate,1
Deal,1
FxmlDownloadsViewController.removeItemsFromOCTable(list);,1
\du,\,1
AUTO_INCREMENT,1
conn.getResponseMessage());,1
\"\Listener\,1
variable,1
totalDownValProperty(),1
POSLEDNEHO,1
(partStart,1
rebel,1
(DownloadTask.SizeNotDeterminedException,1
//ALSO,1
(1),1
-1),1
V,1
\KEY,"\\,1
having,1
drop,1
<T>,1
ID,1
\HashMap<DownloadUnit,\,1
owner,1
URLConnection.guessContentTypeFromName(url);,1
incognito,1
failed,1
visualisation,1
count;,1
upadte,1
'yyyyMMdd'),1
aktivny,1
OFFSET!!!!!!,1
H2DatabaseConnector(MainDataModel.getInstance().loginProfile),1
functionality,1
SEPARATED,1
blocks,1
unoptimized.And,1
1mb,1
special,1
System.out.println(name,1
CI,1
#6E2D8A,1
SupportedLinks{,1
\Label("\State"\);\,1
possibleSuggestions=new,1
optimal,1
FRO,1
files,1
space,1
true)),1
downBytes,1
smooth,1
AL,1
screen/main,1
want,1
PARTIALLY,1
OpenChannel,1
BEST,1
think,1
selection,1
reuses,1
}).start();,1
String[names.size()]));,1
faster,1
Downloader.getDownloads();,1
division,1
DOBRE,1
differenteee,1
\String[]{"\shit"\,\,1
/-----------------------------------------------------,1
themself,1
\partSize,\,1
rows,1
ucidim,1
differ,1
fxmlController/no,1
calcualte,1
//http://docs.oracle.com/javase/7/docs/technotes/guides/security/StandardNames.html,1
//hide,1
conn.getHeaderFields().keySet()),1
this.setName(threadName);,1
2000,1
feedback,1
help,1
useless,1
DONE,1
equal,1
Make,1
allowed,1
downloads.removeAll(activeDownloads);,1
refreshes,1
updated,1
\case"\\,1
\"\/select,"\\,1
please,1
divBy,1
actions,1
(endByte,1
unconnected,1
DOWNLOADING,1
suboru,1
Does,1
kill,1
Aint,1
VERSION,1
}catch(Exception,1
DbUtil.getUsersTableInfo();,1
SUCESS,1
pattern,1
/create,1
calculations,1
\getSizeOfFileSafe()+"\\,1
setText((item,1
stmt.executeUpdate();,1
\conn.getHeaderFields().get("\Content-Length"\);\,1
.etc,1
FileUtils.FILETYPE_XLSX);,1
CONTROLLER,1
key,1
setText(((item,1
reall,1
\BAR,\,1
browser,1
CTRL+SHIFT,1
advanced,1
downloadFile(DownloadUnit,1
HOLDER,1
\Downloaded:"\\,1
\credentials"\);\,1
\System.out.println("\EMPTY\,1
File(du.getDirectory()));,1
Unknown,1
notifyObservers();,1
whats,1
BYTE.,1
resourceUrl,1
